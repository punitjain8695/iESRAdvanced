
RFCommunication.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000100  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000154  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000075  00000000  00000000  0000018f  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000003f  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000012b  00000000  00000000  00000243  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000370  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000008f  00000000  00000000  00000390  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e0       	ldi	r30, 0x00	; 0
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 7e 00 	jmp	0xfc	; 0xfc <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <main>:
#include<avr/io.h>
#define F_CPU 16000000UL
#include<util/delay.h>
int main()
{
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	87 bb       	out	0x17, r24	; 23
DDRB=255;
DDRD=0xf0;
  96:	80 ef       	ldi	r24, 0xF0	; 240
  98:	81 bb       	out	0x11, r24	; 17
while(1)
{
PORTD=0xef;
  9a:	5f ee       	ldi	r21, 0xEF	; 239
if((PIND&0x01)==0)
{
while((PIND&0x01)==0);
while((PIND&0x0f)==0x0f)
{
PORTB=0b00000110;
  9c:	46 e0       	ldi	r20, 0x06	; 6
if((PIND&0x02)==0)
{
while((PIND&0x02)==0);
while((PIND&0x0f)==0x0f)
{
PORTB=0b00000100;
  9e:	34 e0       	ldi	r19, 0x04	; 4
if((PIND&0x04)==0)
{
while((PIND&0x04)==0);
while((PIND&0x0f)==0x0f)
{
PORTB=0b00000010;
  a0:	22 e0       	ldi	r18, 0x02	; 2
if((PIND&0x08)==0)
{
while((PIND&0x08)==0);
while((PIND&0x0f)==0x0f)
{
PORTB=0b00001001;
  a2:	99 e0       	ldi	r25, 0x09	; 9
{
DDRB=255;
DDRD=0xf0;
while(1)
{
PORTD=0xef;
  a4:	52 bb       	out	0x12, r21	; 18
if((PIND&0x01)==0)
  a6:	80 99       	sbic	0x10, 0	; 16
  a8:	08 c0       	rjmp	.+16     	; 0xba <main+0x28>
{
while((PIND&0x01)==0);
  aa:	80 9b       	sbis	0x10, 0	; 16
  ac:	fe cf       	rjmp	.-4      	; 0xaa <main+0x18>
  ae:	01 c0       	rjmp	.+2      	; 0xb2 <main+0x20>
while((PIND&0x0f)==0x0f)
{
PORTB=0b00000110;
  b0:	48 bb       	out	0x18, r20	; 24
{
PORTD=0xef;
if((PIND&0x01)==0)
{
while((PIND&0x01)==0);
while((PIND&0x0f)==0x0f)
  b2:	80 b3       	in	r24, 0x10	; 16
  b4:	8f 70       	andi	r24, 0x0F	; 15
  b6:	8f 30       	cpi	r24, 0x0F	; 15
  b8:	d9 f3       	breq	.-10     	; 0xb0 <main+0x1e>
{
PORTB=0b00000110;
}
}

if((PIND&0x02)==0)
  ba:	81 99       	sbic	0x10, 1	; 16
  bc:	08 c0       	rjmp	.+16     	; 0xce <main+0x3c>
{
while((PIND&0x02)==0);
  be:	81 9b       	sbis	0x10, 1	; 16
  c0:	fe cf       	rjmp	.-4      	; 0xbe <main+0x2c>
  c2:	01 c0       	rjmp	.+2      	; 0xc6 <main+0x34>
while((PIND&0x0f)==0x0f)
{
PORTB=0b00000100;
  c4:	38 bb       	out	0x18, r19	; 24
}

if((PIND&0x02)==0)
{
while((PIND&0x02)==0);
while((PIND&0x0f)==0x0f)
  c6:	80 b3       	in	r24, 0x10	; 16
  c8:	8f 70       	andi	r24, 0x0F	; 15
  ca:	8f 30       	cpi	r24, 0x0F	; 15
  cc:	d9 f3       	breq	.-10     	; 0xc4 <main+0x32>
{
PORTB=0b00000100;
}
}

if((PIND&0x04)==0)
  ce:	82 99       	sbic	0x10, 2	; 16
  d0:	08 c0       	rjmp	.+16     	; 0xe2 <main+0x50>
{
while((PIND&0x04)==0);
  d2:	82 9b       	sbis	0x10, 2	; 16
  d4:	fe cf       	rjmp	.-4      	; 0xd2 <main+0x40>
  d6:	01 c0       	rjmp	.+2      	; 0xda <main+0x48>
while((PIND&0x0f)==0x0f)
{
PORTB=0b00000010;
  d8:	28 bb       	out	0x18, r18	; 24
}

if((PIND&0x04)==0)
{
while((PIND&0x04)==0);
while((PIND&0x0f)==0x0f)
  da:	80 b3       	in	r24, 0x10	; 16
  dc:	8f 70       	andi	r24, 0x0F	; 15
  de:	8f 30       	cpi	r24, 0x0F	; 15
  e0:	d9 f3       	breq	.-10     	; 0xd8 <main+0x46>
{
PORTB=0b00000010;
}
}

if((PIND&0x08)==0)
  e2:	83 99       	sbic	0x10, 3	; 16
  e4:	09 c0       	rjmp	.+18     	; 0xf8 <main+0x66>
{
while((PIND&0x08)==0);
  e6:	83 9b       	sbis	0x10, 3	; 16
  e8:	fe cf       	rjmp	.-4      	; 0xe6 <main+0x54>
  ea:	01 c0       	rjmp	.+2      	; 0xee <main+0x5c>
while((PIND&0x0f)==0x0f)
{
PORTB=0b00001001;
  ec:	98 bb       	out	0x18, r25	; 24
}

if((PIND&0x08)==0)
{
while((PIND&0x08)==0);
while((PIND&0x0f)==0x0f)
  ee:	80 b3       	in	r24, 0x10	; 16
  f0:	8f 70       	andi	r24, 0x0F	; 15
  f2:	8f 30       	cpi	r24, 0x0F	; 15
  f4:	d9 f3       	breq	.-10     	; 0xec <main+0x5a>
  f6:	d6 cf       	rjmp	.-84     	; 0xa4 <main+0x12>
PORTB=0b00001001;
}
}
else
{
PORTB=0;
  f8:	18 ba       	out	0x18, r1	; 24
  fa:	d4 cf       	rjmp	.-88     	; 0xa4 <main+0x12>

000000fc <_exit>:
  fc:	f8 94       	cli

000000fe <__stop_program>:
  fe:	ff cf       	rjmp	.-2      	; 0xfe <__stop_program>
